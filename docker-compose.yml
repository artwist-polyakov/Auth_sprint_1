version: '3'

services:

  nginx:
   container_name: nginx
   build: ./nginx
   volumes:
     - static_volume:/var/www/static
     - media_volume:/var/www/media
     - admin_volume:/var/www/static/admin
   depends_on:
     - movies
     - auth
     - admin
   ports:
     - "8000:80"
     - "443:443"


  admin:
    container_name: admin
    build: ./admin
    volumes:
      - admin_static:/var/www/static/admin
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - postgres


  movies:
    container_name: movies
    build: ./movies
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - elasticsearch-node1
      - elasticsearch-node2
      - redis


  auth:
    container_name: auth
    build: ./auth
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis


  etl:
    container_name: etl
    build: ./etl
    env_file:
      - .env
    depends_on:
      - postgres
      - elasticsearch-node1
      - elasticsearch-node2
      - redis



  postgres:
    container_name: postgres
    image: postgres:${POSTGRES_VERSION}
    env_file:
      - .env
    volumes:
      - ./etl/core/postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"



  elasticsearch-node1:
    image: elasticsearch:${STACK_VERSION}
    container_name: elasticsearch-node1
    env_file:
      - .env
    environment:
      - node.name=elasticsearch-node1
      - discovery.seed_hosts=elasticsearch-node1,elasticsearch-node2
      - cluster.initial_master_nodes=elasticsearch-node1,elasticsearch-node2
      - cluster.name=${CLUSTER_NAME}
      - bootstrap.memory_lock=${MEMORY_LOCK}
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1


  elasticsearch-node2:
    image: elasticsearch:${STACK_VERSION}
    container_name: elasticsearch-node2
    env_file:
      - .env
    environment:
      - node.name=elasticsearch-node2
      - discovery.seed_hosts=elasticsearch-node1,elasticsearch-node2
      - cluster.initial_master_nodes=elasticsearch-node1,elasticsearch-node2
      - cluster.name=${CLUSTER_NAME}
      - bootstrap.memory_lock=${MEMORY_LOCK}
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=false
    depends_on:
      - elasticsearch-node1
    ulimits:
      memlock:
        soft: -1
        hard: -1


  redis:
    container_name: redis
    image: redis:latest
    volumes:
      - ./core/redis.conf:/redis.conf
    command: [ "redis-server", "/redis.conf" ]

volumes:
    static_volume:
    media_volume:
    admin_volume:
    admin_static:
    elasticsearch_data:
    redis_data:
    postgres_data:
