"""empty message

Revision ID: 52d5265d601e
Revises: 
Create Date: 2024-04-30 23:11:42.734340

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '52d5265d601e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute('CREATE SCHEMA IF NOT EXISTS notifications')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('user_ids', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('type', sa.Enum('EMAIL', 'SMS', 'PUSH', name='notificationtype'), nullable=False),
    sa.Column('is_launched', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='notifications'
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('is_sended', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['notifications.tasks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='notifications'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notifications', schema='notifications')
    op.drop_table('tasks', schema='notifications')
    # ### end Alembic commands ###
