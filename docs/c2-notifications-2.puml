@startuml

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
skinparam componentStyle uml2
LAYOUT_WITH_LEGEND()
LAYOUT_LANDSCAPE()
skinparam componentStyle uml2

title
<b>Movies notifications pipeline</b>
end title

Boundary(users, "Users") {
    Container(Notification_robot, "Notifications robot")
    Container(Welcome_robot, "Welcome robot")
    Person(admin, "Admin")
}

Boundary(Notifications-db, "Notifications database", "date partitioned") {
    ContainerDb_Ext(Notifications_tasks, "Notifications tasks table", "task_id, content, status")
    ContainerDb_Ext(Notifications_results, "Ready notifications", "notofication_id, content, status")
}

Boundary(NotificationsAPI, "Notifications API") {
    Container(Notifications_service, "Notifications service")
}



Boundary(Queues, "Notifications queue") {
    SystemQueue_Ext(TasksQueue, "Tasks Queue", "Tasks to be processed")
    SystemQueue_Ext(NotificationsQueue, "Results Queue", "Results of processed tasks")
    Container(Notifications_send_worker, "Notifications send")
    Boundary(Preparation_workers, "Preparation workers") {
    Container(Notifications_init_worker, "Notifications init worker")
    Container(Enricher, "Enricher worker")
    Container(Notifications_restore_worker, "Harvests failed notifications")
}
}

Boundary(Output, "Mailings") {
    Container(EMail, "E-mails")
    Container(SMS, "SMSs")
    Container(Push, "Push notifications")
}


Rel_R(admin, Notifications_service, "Creates one time tasks")
Rel_R(Welcome_robot, Notifications_service, "Creates welcome tasks")
Rel_R(Notification_robot, Notifications_service, "Creates conditional tasks")
Rel_D(Notifications_service, Notifications_tasks, "Puts tasks")
Rel(Notifications_tasks, Notifications_init_worker, "Gets tasks and marks pending")
Rel_R(Notifications_init_worker, TasksQueue, "Puts tasks")
Rel_L(TasksQueue, Enricher, "Gets tasks to prepare")
Rel_L(Enricher, NotificationsQueue, "Puts prepared tasks")
Rel(Enricher, Notifications_results, "Saves as pending")
Rel(Enricher, Notifications_tasks, "Marks as completed")
Rel_R( NotificationsQueue, Notifications_send_worker, "Gets tasks to send")
Rel( Notifications_tasks,Notifications_restore_worker, "Gets failed tasks", "every 10 minutes")
Rel_R(Notifications_restore_worker, TasksQueue, "Puts failed tasks")
Rel_L(Notifications_send_worker, EMail, "Sends emails")
Rel_L(Notifications_send_worker, SMS, "Sends SMSs")
Rel_L(Notifications_send_worker, Push, "Sends push notifications")
Rel_R(Notifications_send_worker, Notifications_results, "Marks as completed")



@enduml